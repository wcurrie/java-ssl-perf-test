Keystore created using:
keytool -genkey -keyalg RSA -alias selfsigned -keystore keystore.jks -storepass password -validity 360 -keysize 2048

View cert using:
keytool -export -alias selfsigned -keystore keystore.jks -storepass password|openssl x509 -inform DEF -noout -text

When all else fails:
-Djavax.net.debug=ssl

Try a Go client to make the client's job easier?
* http://stackoverflow.com/questions/22666163/golang-tls-with-selfsigned-certificate

Why 'connection reset' with many concurrent clients?
* http://veithen.blogspot.com.au/2014/01/how-tcp-backlog-works-in-linux.html

openssl speed rsa results
server
                  sign    verify    sign/s verify/s
                  rsa  512 bits 0.000123s 0.000009s   8100.3 113378.4
                  rsa 1024 bits 0.000417s 0.000024s   2395.6  41099.9
                  rsa 2048 bits 0.002677s 0.000083s    373.5  12079.6
                  rsa 4096 bits 0.019212s 0.000307s     52.1   3259.6

client
                  sign    verify    sign/s verify/s
                  rsa  512 bits 0.000104s 0.000009s   9599.2 113623.4
                  rsa 1024 bits 0.000324s 0.000021s   3088.4  47746.5
                  rsa 2048 bits 0.002151s 0.000068s    465.0  14609.0
                  rsa 4096 bits 0.015766s 0.000249s     63.4   4008.0

Learnings:
* Running into http://stackoverflow.com/questions/16191236/tomcat-startup-fails-due-to-java-net-socketexception-invalid-argument-on-mac-o on osx java 1.7.0_45
* Fail on jdk8:
    java(6404,0x120c6e000) malloc: *** error for object 0x100000000: pointer being freed was not allocated
    *** set a breakpoint in malloc_error_break to debug

Created key for TC native by exporting and accidentally converting...
1. keytool -importkeystore -srckeystore keystore.jks -destkeystore store.p12 -deststoretype PKCS12
2. openssl pkcs12 -in store.p12 -info

Installing tc native mvn dependency:
mvn deploy:deploy-file -Durl=file:///Users/wcurrie/.m2/repository/ -Dfile=/Users/wcurrie/Downloads/tomcat-native-1.1.30-src/jni/dist/tomcat-native-1.1.30.jar -DgroupId=tc-native -DartifactId=tc-native -Dversion=1.1.30

Building tc native
./configure --with-apr=/opt/local/bin/apr-1-config --with-ssl=yes --prefix=/Users/wcurrie/IdeaProjects/jpos-ssl-perf/tcnative --with-java-home=/Library/Java/JavaVirtualMachines/jdk1.7.0_55.jdk/Contents/Home/

Running tc native
java -Djava.library.path=/home/wcurrie/tcnative/lib/ -cp server.jar x.TcNativeServer

Increasing file descriptor count on server (needed with netty).
sudo sh -c "ulimit -n 65535 && exec su $LOGNAME"

Next steps:
* tomcat native on client side too
 - impact on jsse server
* Bounce between two server processes. Show impact of TLS session tickets with shared ticket key.
* Netty on server
 - presumably only better to handle a large number of clients where most are idle...
 - connect a large number of clients and ping periodically (randomly?). compare rtt between thread per client and async. vary number of clients.


